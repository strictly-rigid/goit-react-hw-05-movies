{"version":3,"file":"static/js/884.46f2bb1d.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Suspense, useRef, useState, useEffect } from 'react';\n\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/dogs');\n  const { movieId } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState({});\n  const [posterUrl, setPosterUrl] = useState('');\n  useEffect(() => {\n    async function getMovieDetails() {\n      const movieDetails = await fetchMovieDetails(movieId);\n      console.log(movieDetails);\n      if (movieDetails) {\n        setMovieInfo(movieDetails);\n      }\n      const posterPath = movieDetails.poster_path;\n      if (posterPath) {\n        const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\n        setPosterUrl(posterBaseUrl + posterPath);\n      }\n    }\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  const { original_title, vote_average, release_date, overview, genres } =\n    movieInfo;\n\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h1>\n        {original_title} {year}\n      </h1>\n      <img src={posterUrl} alt=\"movie poster\" />\n      <p>User score: {Math.round(vote_average * 10)}% </p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      {genres && genres.length > 0 ? (\n        <p>{genres.map(genre => genre.name).join(', ')}</p>\n      ) : (\n        <p>No genres available</p>\n      )}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Wait, the page is loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nexport async function fetchTrendingMovies(apiKey) {\n  const endpoint = '/trending/movie/week';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    console.log(data.results);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/credits?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/reviews?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchQueryRequest(searchQuery) {\n  const endpoint = '/search/movie';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}&query=${searchQuery}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movieInfo","setMovieInfo","posterUrl","setPosterUrl","useEffect","fetchMovieDetails","movieDetails","console","log","posterPath","poster_path","getMovieDetails","original_title","vote_average","release_date","overview","genres","year","Date","getFullYear","to","current","src","alt","Math","round","length","map","genre","name","join","Suspense","fallback","BASE_URL","API_KEY","fetchTrendingMovies","apiKey","url","fetch","response","ok","Error","status","json","data","results","error","endpoint","fetchMovieCast","fetchMovieReviews","fetchQueryRequest","searchQuery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}