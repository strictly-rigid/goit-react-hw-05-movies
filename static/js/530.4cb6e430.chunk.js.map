{"version":3,"file":"static/js/530.4cb6e430.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnSubmit\":\"Movies_btnSubmit__vUK-F\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchQueryRequest } from 'services/api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  useEffect(() => {\n    if (buttonClicked && searchQuery) {\n      async function getMoviesList() {\n        const fetchedMoviesList = await fetchQueryRequest(searchQuery);\n        if (fetchedMoviesList && fetchedMoviesList.results) {\n          setMoviesList(fetchedMoviesList.results);\n        }\n        setButtonClicked(false);\n      }\n      getMoviesList();\n    }\n  }, [buttonClicked, searchQuery]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    setButtonClicked(true);\n  };\n\n  const updateQueryString = evt => {\n    const currentSearchQuery = evt.target.value;\n    setSearchQuery(currentSearchQuery);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" onChange={updateQueryString} />\n        <button className={css.btnSubmit} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <ul>\n        {moviesList.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <h3>{movie.title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nexport async function fetchTrendingMovies(apiKey) {\n  const endpoint = '/trending/movie/week';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/credits?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/reviews?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchQueryRequest(searchQuery) {\n  const endpoint = '/search/movie';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}&query=${searchQuery}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","moviesList","setMoviesList","searchQuery","setSearchQuery","buttonClicked","setButtonClicked","useEffect","getMoviesList","fetchQueryRequest","fetchedMoviesList","results","onSubmit","event","preventDefault","type","onChange","evt","currentSearchQuery","target","value","className","css","map","movie","to","id","title","BASE_URL","API_KEY","fetchTrendingMovies","apiKey","url","fetch","response","ok","Error","status","json","data","console","error","fetchMovieDetails","movieId","endpoint","fetchMovieCast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}