{"version":3,"file":"static/js/530.f3426f39.chunk.js","mappings":"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","sources":["components/MoviesList.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <h3>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"btnSubmit\":\"Movies_btnSubmit__vUK-F\"};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchQueryRequest } from 'services/api';\nimport MoviesList from 'components/MoviesList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      async function getMoviesList() {\n        const fetchedMoviesList = await fetchQueryRequest(query);\n        if (fetchedMoviesList && fetchedMoviesList.results) {\n          setMoviesList(fetchedMoviesList.results);\n        }\n      }\n      getMoviesList();\n    }\n  }, [query]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query: event.currentTarget.elements.query.value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button className={css.btnSubmit} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <MoviesList movies={moviesList} />\n    </div>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nexport async function fetchTrendingMovies(apiKey) {\n  const endpoint = '/trending/movie/week';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/credits?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const endpoint = `/movie/${movieId}`;\n  const url = `${BASE_URL}${endpoint}/reviews?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport async function fetchQueryRequest(searchQuery) {\n  const endpoint = '/search/movie';\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}&query=${searchQuery}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\n        `Error: Unable to fetch data. Status code: ${response.status}`\n      );\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesList","fetchQueryRequest","fetchedMoviesList","results","onSubmit","event","preventDefault","currentTarget","elements","value","type","name","className","css","BASE_URL","API_KEY","fetchTrendingMovies","apiKey","url","fetch","response","ok","Error","status","json","data","console","error","fetchMovieDetails","movieId","endpoint","fetchMovieCast","fetchMovieReviews","searchQuery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}